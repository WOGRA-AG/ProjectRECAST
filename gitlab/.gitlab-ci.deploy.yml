.deploy:
  stage: deploy
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_BUILDKIT: 1
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/frontend:$LABEL
    - docker push $CI_REGISTRY_IMAGE/frontend:$LABEL

deploy-tag:
  extends:
    - .deploy
  needs:
    - build-frontend
    - build-frontend-image
  variables:
    LABEL: $CI_COMMIT_TAG
  when: always
  rules:
    - if: '$CI_COMMIT_TAG'

deploy-prod:
  extends:
    - .deploy
  needs:
    - build-frontend
    - build-frontend-image
  variables:
    LABEL: 'latest'
  when: manual
  rules:
    - if: '$CI_COMMIT_TAG'

deploy-staging:
  extends:
    - .deploy
  needs:
    - build-frontend-dev
    - build-frontend-image-dev
  variables:
    LABEL: 'stage'
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: $CI_COMMIT_REF_NAME =~ /^hotfix/
    - if: '$CI_COMMIT_TAG'

deploy-release:
  extends:
    - .deploy
  needs:
    - build-frontend-dev
    - build-frontend-image-dev
  variables:
    LABEL: 'rc'
  when: manual
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^rc/
    - if: $CI_COMMIT_REF_NAME =~ /^release/

deploy-dev:
  extends:
    - .deploy
  needs:
    - build-frontend-dev
    - build-frontend-image-dev
  variables:
    LABEL: 'dev'
  when: manual

deploy-feature:
  extends:
    - .deploy
  needs:
    - build-frontend-dev
    - build-frontend-image-dev
  variables:
    LABEL: 'feature'
  when: manual

deploy-e2e:
  extends:
    - .deploy
  needs:
    - build-frontend-dev
    - build-frontend-image-dev
  variables:
    LABEL: 'e2e'
  resource_group: testing
  when: manual
