@use 'sass:map';
@use '@angular/material' as mat;
@import '../essentials/button-layout.scss';
@import 'src/app/design/material/essentials/media-queries';

@mixin color($theme) {
  $accent-palette: map.get($theme, 'accent');
  $warn-palette: map.get($theme, 'warn');
  $primary-palette: map.get($theme, 'primary');
  $primary-contrast-500: mat.get-contrast-color-from-palette(
    $primary-palette,
    500
  );
  $accent-contrast-500: mat.get-contrast-color-from-palette(
    $accent-palette,
    500
  );
  $warn-contrast-500: mat.get-contrast-color-from-palette($warn-palette, 500);

  //TODO: Contrast color does not work properly with mdc as of Angular Material 15.2. So this is a temporary workaround and should be removed as soon as possible
  .mat-mdc-unelevated-button.mat-primary {
    color: $primary-contrast-500;
  }

  .mat-mdc-unelevated-button.mat-accent {
    color: $accent-contrast-500;
  }

  .mat-mdc-raised-button.mat-primary {
    color: $accent-contrast-500;
  }

  .mat-mdc-raised-button.mat-accent {
    color: $accent-contrast-500;
  }

  .mat-mdc-raised-button.mat-warn {
    color: $warn-contrast-500;
  }

  .mat-mdc-raised-button.mat-warn {
    color: $warn-contrast-500;
  }

  .mat-mdc-outlined-button:not(.mat-button-disabled) {
    border-color: currentColor;
  }
}

@mixin layout() {
  .mat-mdc-unelevated-button,
  .mat-mdc-raised-button,
  .mat-mdc-outlined-button {
    height: auto;
    border-radius: $btn-small-border-radius;
    border-width: $btn-small-border-widht;
    padding-top: $btn-small-padding-top;
    padding-bottom: $btn-small-padding-bottom;
    padding-left: $btn-small-padding-left;
    padding-right: $btn-small-padding-right;

    &.bordered {
      padding-top: calc($btn-small-padding-top - $btn-small-border-widht);
      padding-bottom: calc($btn-small-padding-bottom - $btn-small-border-widht);
    }

    @media #{$medium-and-up} {
      height: auto;
      border-radius: $btn-medium-border-radius;
      border-width: $btn-medium-border-widht;
      padding-top: $btn-medium-padding-top;
      padding-bottom: $btn-medium-padding-bottom;
      padding-left: $btn-medium-padding-left;
      padding-right: $btn-medium-padding-right;

      &.bordered {
        padding-top: calc($btn-medium-padding-top - $btn-medium-border-widht);
        padding-bottom: calc(
          $btn-medium-padding-bottom - $btn-medium-border-widht
        );
      }
    }

    &.small {
      height: auto;
      border-radius: $btn-small-border-radius;
      border-width: $btn-small-border-widht;
      padding-top: $btn-small-padding-top;
      padding-bottom: $btn-small-padding-bottom;
      padding-left: $btn-small-padding-left;
      padding-right: $btn-small-padding-right;

      &.bordered {
        padding-top: calc($btn-small-padding-top - $btn-small-border-widht);
        padding-bottom: calc(
          $btn-small-padding-bottom - $btn-small-border-widht
        );
      }
    }

    &.medium {
      height: auto;
      border-radius: $btn-medium-border-radius;
      border-width: $btn-medium-border-widht;
      padding-top: $btn-medium-padding-top;
      padding-bottom: $btn-medium-padding-bottom;
      padding-left: $btn-medium-padding-left;
      padding-right: $btn-medium-padding-right;

      &.bordered {
        padding-top: calc($btn-medium-padding-top - $btn-medium-border-widht);
        padding-bottom: calc(
          $btn-medium-padding-bottom - $btn-medium-border-widht
        );
      }
    }

    &.large {
      height: auto;
      border-radius: $btn-large-border-radius;
      border-width: $btn-large-border-widht;
      padding-top: $btn-large-padding-top;
      padding-bottom: $btn-large-padding-bottom;
      padding-left: $btn-large-padding-left;
      padding-right: $btn-large-padding-right;

      &.bordered {
        padding-top: calc($btn-large-padding-top - $btn-large-border-widht);
        padding-bottom: calc(
          $btn-large-padding-bottom - $btn-large-border-widht
        );
      }
    }

    &.text {
      border: none;
      height: auto;
      padding-top: $btn-text-small-padding-top;
      padding-bottom: $btn-text-small-padding-bottom;
      padding-left: $btn-text-small-padding-left;
      padding-right: $btn-text-small-padding-right;

      @media #{$medium-and-up} {
        padding-top: $btn-text-medium-padding-top;
        padding-bottom: $btn-text-medium-padding-bottom;
        padding-left: $btn-text-medium-padding-left;
        padding-right: $btn-text-medium-padding-right;
      }

      &.small {
        padding-top: $btn-text-small-padding-top;
        padding-bottom: $btn-text-small-padding-bottom;
        padding-left: $btn-text-small-padding-left;
        padding-right: $btn-text-small-padding-right;
      }

      &.medium {
        padding-top: $btn-text-medium-padding-top;
        padding-bottom: $btn-text-medium-padding-bottom;
        padding-left: $btn-text-medium-padding-left;
        padding-right: $btn-text-medium-padding-right;
      }

      &.large {
        padding-top: $btn-text-large-padding-top;
        padding-bottom: $btn-text-large-padding-bottom;
        padding-left: $btn-text-large-padding-left;
        padding-right: $btn-text-large-padding-right;
      }
    }

    .mat-icon {
      display: inline-block;
      padding-right: 0.5em;
    }
  }
}

@mixin theme($theme, $typography-config, $variants) {
  @include color($theme);
  @include layout();
}
